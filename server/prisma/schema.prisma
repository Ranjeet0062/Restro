// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Role {
  USER
  CHEF
  COUNTER
  ADMIN
}

enum payStatus {
  PAID
  PENDING
  FAILED
}
enum orderStatus {
  PENDING
  SERVED
  CANCEL
}
enum itemStatus {
  AVAILABLE
  OUT_OF_STOCK
}
enum Category {
  BREAKFAST
  LUNCH
  DINNER
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String? @unique
  password   String?
  phoneNumber String @unique
  role       Role     @default(USER)
  orders     Order[]
  createdAt  DateTime @default(now())
}

model Order {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  items      OrderItem[]
  tabel String?
  totalPrice Float
  status     orderStatus   @default(PENDING)
  payment payStatus @default(PENDING)
  createdAt  DateTime @default(now())
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    Int
  item       Item     @relation(fields: [itemId], references: [id])
  itemId     Int
  quantity   Int
  price      Float
}

model Item {
  id         Int      @id @default(autoincrement())
  name       String
  itemCode   String @unique
  itemImage  String @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRiX5LjkyUPAgEGYLPpuDymckpDCMrxk0JXLw&s")
  price      Float
  quantity String?
  ingredients String?
  veg Boolean?
  status itemStatus @default(AVAILABLE)
  categories Category[]
  orderItems OrderItem[]
}